version: "3.7"

services:
  blackfire:
    image: blackfire/blackfire:2
    environment:
      - BLACKFIRE_DISABLE_LEGACY_PORT=1
      - BLACKFIRE_LOG_LEVEL=2
      # Credentials should be configured on the host system (https://docs.docker.com/compose/compose-file/compose-file-v3/#environment).
      - BLACKFIRE_SERVER_ID
      - BLACKFIRE_SERVER_TOKEN
      - BLACKFIRE_CLIENT_ID
      - BLACKFIRE_CLIENT_TOKEN
    depends_on:
      - php

# <== DATABASE PLACEHOLDER ==>

  maildev:
    image: djfarrelly/maildev:latest
    depends_on:
      - php
    ports:
      - "1080:80"

  nginx:
    image: ajardin/nginx:latest
    ports:
      - "443:443"
    volumes:
      # Project files
      - code:/var/www/html:delegated
      # SSL certificates
      - ${PROJECT_LOCATION}/var/docker/nginx/certs:/etc/nginx/ssl:cached
      # Custom configuration
      - ${PROJECT_LOCATION}/var/docker/nginx/custom.conf:/etc/nginx/conf.d/custom.conf:ro
    depends_on:
      - php
    tty: true

  php:
    image: ${DOCKER_PHP_IMAGE}
    environment:
      - SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock
    volumes:
      # Project files
      - code:/var/www/html:delegated
      # Custom configuration
      - ${PROJECT_LOCATION}/var/docker/php/php-cli.ini:/usr/local/etc/php/php-cli.ini:ro
      - ${PROJECT_LOCATION}/var/docker/php/php-fpm-fcgi.ini:/usr/local/etc/php/php-fpm-fcgi.ini:ro
      # SSH socket
      - /run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock
    tty: true

  synchro:
    image: ajardin/synchro:latest
    container_name: ${PROJECT_NAME}_synchro
    volumes:
      - code:/var/www/html:nocopy

volumes:
  code: {}
  database: {}
